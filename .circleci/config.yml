version: 2.1
executors:
  current-go:
    docker:
      - image: circleci/golang:1.15
  prior-go:
    docker:
      - image: circleci/golang:1.14
  
build-template: &build-template
  environment:
    TEST_RESULTS: /tmp/test-results # path to where test results will be saved

  steps:
    - checkout
    - run: mkdir -p $TEST_RESULTS # create the test results directory

    - restore_cache: # restores saved cache if no changes are detected since last run
        keys:
          - go-pkg-mod-{{ checksum "go.sum" }}

    - run:
        name: "Precommit and Coverage Report"
        command: |
          make ci
          find . -name 'coverage.html' > "${TEST_RESULTS}/coverage.lst"
          tar -n -cf - -T "${TEST_RESULTS}/coverage.lst" | tar -C "${TEST_RESULTS}" -xvf -

    - save_cache:
        key: go-pkg-mod-{{ checksum "go.sum" }}
        paths:
          - "/go/pkg/mod"

    - store_artifacts:
        path: /tmp/test-results
        destination: opentelemetry-go-contrib-test-output

    - store_test_results:
        path: /tmp/test-results

jobs:
  current-go:
    executor: current-go
    <<: *build-template

  prior-go:
    executor: prior-go
    <<: *build-template

  integration:

    parameters:
      target:
        type: string
        description: "The makefile target that will run the tests for the integration."

    machine:
      image: ubuntu-1604:202004-01
    
    environment:
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved
      INTEGRATION: << parameters.target >>
    
    steps:
      - checkout
      
      - run: mkdir -p $TEST_RESULTS
      
      - run: 
          name: "Integration test $INTEGRATION"
          command: |
            make $INTEGRATION
            find . -name 'coverage.html' > "${TEST_RESULTS}/coverage.lst"
            tar -n -cf - -T "${TEST_RESULTS}/coverage.lst" | tar -C "${TEST_RESULTS}" -xvf -

      - store_artifacts:
          path: /tmp/test-results
          destination: opentelemetry-go-contrib-test-output

      - store_test_results:
          path: /tmp/test-results

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - current-go
      - prior-go
      
  integration_test:
    jobs:
      - integration:
          matrix:
            parameters:
              target: [test-gocql, test-mongo-driver, test-gomemcache]